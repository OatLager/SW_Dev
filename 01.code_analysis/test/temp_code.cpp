
FailsafeBase::Action Failsafe::checkModeFallback(const failsafe_flags_s &status_flags, 		uint8_t user_intended_mode) const { 	Action action = Action::None;  	// offboard signal 	if (status_flags.offboard_control_signal_lost && (status_flags.mode_req_offboard_signal & (1u << user_intended_mode))) { 		action = fromOffboardLossActParam(_param_com_obl_rc_act.get(), user_intended_mode);  		// for this specific case, user_intended_mode is not modified, we shouldn't check additional fallbacks 		if (action == Action::Disarm) { 			return action; 		} 	}  	// posctrl 	switch (position_control_navigation_loss_response(_param_com_posctl_navl.get())) { 	case position_control_navigation_loss_response::Altitude_Manual: // AltCtrl/Manual  		// PosCtrl -> AltCtrl 		if (user_intended_mode == vehicle_status_s::NAVIGATION_STATE_POSCTL 		    && !modeCanRun(status_flags, user_intended_mode)) { 			action = Action::FallbackAltCtrl; 			user_intended_mode = vehicle_status_s::NAVIGATION_STATE_ALTCTL; 		}  		// AltCtrl -> Stabilized 		if (user_intended_mode == vehicle_status_s::NAVIGATION_STATE_ALTCTL 		    && !modeCanRun(status_flags, user_intended_mode)) { 			action = Action::FallbackStab; 			user_intended_mode = vehicle_status_s::NAVIGATION_STATE_STAB; 		}  		break;  	case position_control_navigation_loss_response::Land_Descend: // Land/Terminate  		// PosCtrl -> Land 		if (user_intended_mode == vehicle_status_s::NAVIGATION_STATE_POSCTL 		    && !modeCanRun(status_flags, user_intended_mode)) { 			action = Action::Land; 			user_intended_mode = vehicle_status_s::NAVIGATION_STATE_AUTO_LAND;  			// Land -> Descend 			if (!modeCanRun(status_flags, user_intended_mode)) { 				action = Action::Descend; 				user_intended_mode = vehicle_status_s::NAVIGATION_STATE_DESCEND; 			} 		}  		break; 	}   	// Last, check can_run for intended mode 	if (!modeCanRun(status_flags, user_intended_mode)) { 		action = Action::RTL; 		user_intended_mode = vehicle_status_s::NAVIGATION_STATE_AUTO_RTL; 	}  	return action; }
        